.TH WIMLIB-IMAGEX "1" "March 2016" "wimlib 1.9.1" "User Commands"
.SH NAME
wimlib-imagex-optimize \- Optimize a WIM archive
.SH SYNOPSIS
\fBwimlib-imagex optimize\fR \fIWIMFILE\fR [\fIOPTION\fR...]
.SH DESCRIPTION
\fBwimlib-imagex optimize\fR will rebuild the stand-alone WIM \fIWIMFILE\fR.  The new
WIM is written to a temporary file, and it is renamed to the original file when
it's ready.  This action will remove any holes that have been left as a result
of appending images, so the new WIM may be slightly smaller than the old WIM.
.PP
By default, compressed data will be re-used, and not recompressed.  Use the
\fB--recompress\fR or \fB--compress\fR=\fITYPE\fR[:\fILEVEL\fR] option to
request recompression.
.PP
This command is also available as simply \fBwimoptimize\fR if the appropriate
hard link or batch file has been installed.
.SH OPTIONS
.TP 6
\fB--check\fR
When reading \fIWIMFILE\fR, verify its integrity if an integrity table is
present.  In addition, include an integrity table in the optimized WIM.  If this
option is not specified, by default the integrity table (if present) is not
checked, and an integrity table is included in the rebuilt WIM if and only if
one was present in the original WIM.
.TP
\fB--nocheck\fR
Neither verify the integrity of \fIWIMFILE\fR using the integrity table, nor
include an integrity table in the rebuilt WIM file.
.TP
\fB--recompress\fR
Recompress all compressed streams in \fIWIMFILE\fR when rebuilding it.  This
will greatly increase the time needed to rebuild the WIM file, but it may result
in a better compression ratio if wimlib can do a better job than the program
that wrote the original file.
.TP
\fB--compress\fR=\fITYPE\fR[:\fILEVEL\fR]
Recompress the WIM file using the specified compression type, and optionally the
specified compression level for that compression type.  This implies
\fB--recompress\fR.
.IP ""
See the documentation for this option to \fBwimlib-imagex capture\fR (1) for
more details.
.TP
\fB--chunk-size\fR=\fISIZE\fR
Set the WIM compression chunk size to \fISIZE\fR.  See the documentation for
this option to \fBwimlib-imagex capture\fR (1) for more details.
.TP
\fB--solid\fR
Create a "solid" archive that compresses multiple files together.  This can
result in a higher compression ratio, but has disadvantages such as reduced
compatibility.  See the documentation for this option to \fBwimlib-imagex
capture\fR (1) for more details.
.TP
\fB--solid-chunk-size\fR=\fISIZE\fR
Like \fB--chunk-size\fR, but set the chunk size used in solid resources.  See the
documentation for this option to \fBwimlib-imagex capture\fR (1) for more
details.
.TP
\fB--solid-compress\fR=\fITYPE\fR[:\fILEVEL\fR]
Like \fB--compress\fR, but set the compression type used in solid resources.  See
the documentation for this option to \fBwimlib-imagex capture\fR (1) for
more details.
.TP
\fB--threads\fR=\fINUM_THREADS\fR
Number of threads to use for compressing data.  Default: autodetect (number of
processors).  This parameter only has an effect when data recompression is
requested.
.TP
\fB--pipable\fR
Rebuild the WIM so that it can be applied fully sequentially, including from a
pipe.  See \fBwimlib-imagex capture\fR(1) for more details about creating
pipable WIMs.  By default, when neither \fB--pipable\fR or \fB--not-pipable\fR
is specified, the rebuilt WIM will be pipable if and only if it was already
pipable.
.TP
\fB--not-pipable\fR
Rebuild the WIM in the non-pipable format.  (This is the default if
\fIWIMFILE\fR is not pipable.)
.TP
\fB--unsafe-compact\fR
Compact the WIM file in-place, without using a temporary file.  Existing
resources are shifted down to fill holes and new resources are appended as
needed.  The WIM file is truncated to its final size, which may shrink the
on-disk file.  THIS OPERATION CANNOT BE SAFELY INTERRUPTED!  If the operation is
interrupted, then the WIM file will be corrupted, and it may be impossible (or
at least very difficult) to recover any data from it.  Users of this option are
expected to know what they are doing and assume responsibility for any data
corruption that may result.
.SH NOTES
\fBwimlib-imagex optimize\fR does not support split WIMs.
.PP
\fBwimlib-imagex optimize\fR is roughly equivalent to:
.RS
.PP
\fBwimlib-imagex export\fR \fIWIMFILE\fR all tmp.wim && mv tmp.wim \fIWIMFILE\fR
.RE
.PP
.SH EXAMPLES
Rebuild the WIM file 'install.wim':
.RS
.PP
wimoptimize install.wim
.RE
.PP
Rebuild and recompress the WIM file 'install.wim':
.RS
.PP
wimoptimize install.wim --recompress
.RE
.PP
Rebuild and recompress the WIM file 'install.wim', using LZX ("maximum")
compression at a higher-than-default compression level.  The compression chunk
size remains unchanged.  This command will be slow, but it might be useful for
optimizing files for distribution.  See
\fIhttps://wimlib.net/compression.html\fR for some benchmark results.
.RS
.PP
wimoptimize install.wim --compress=LZX:100
.RE
.PP
.SH SEE ALSO
.BR wimlib-imagex (1)
.BR wimlib-imagex-export (1)
.BR wimlib-imagex-verify (1)
